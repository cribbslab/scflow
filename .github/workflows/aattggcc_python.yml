name: scflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build and Test (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.10", "3.11", "3.12"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v3

      - name: Cache conda
        uses: actions/cache@v3
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('conda/environments/scflow.yml') }}

      - name: Set installer URL
        id: set-installer-url
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            echo "installer-url=https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh" >> $GITHUB_ENV
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "installer-url=https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh" >> $GITHUB_ENV
          fi

      - uses: conda-incubator/setup-miniconda@v2
        with:
          installer-url: ${{ env.installer-url }}
          python-version: ${{ matrix.python-version }}
          channels: conda-forge, bioconda, defaults
          channel-priority: true
          activate-environment: scflow
          environment-file: conda/environment.yml

      - name: Configure Conda Paths
        run: echo "/usr/share/miniconda3/condabin" >> $GITHUB_PATH

      - name: Show conda
        run: |
          conda info
          conda list

      - name: Debug Python Environment
        run: |
          python --version
          pip list
          openssl version

      - name: Install Dependencies and scflow
        run: |
          pip install pep8 flake8 pytest nose
          pip install .

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest and nosetests
        run: |
          python setup.py install
          pycodestyle --ignore=E501 tests
          nosetests -v tests/test_import.py
          nosetests -v tests/test_style.py
          nosetests -v tests/test_pipeline_control.py
